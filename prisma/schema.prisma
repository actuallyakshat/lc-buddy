generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MemberRole {
  ADMIN
  MEMBER
}

enum InviteStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model User {
  id          String       @id @unique
  email       String       @unique
  name        String
  leetcodeId  String       @default("")
  memberships Membership[]
  sentInvites Invite[]     @relation("Sender")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Group {
  id             String       @id @default(cuid())
  name           String
  description    String?
  headerImageURL String?
  memberships    Membership[]
  invites        Invite[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Membership {
  id        String     @id @default(cuid())
  userId    String
  groupId   String
  role      MemberRole @default(MEMBER)
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  group     Group      @relation(fields: [groupId], references: [id], onDelete: Cascade)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@unique([userId, groupId])
}

model Invite {
  id         String       @id @default(cuid())
  groupId    String
  senderId   String
  receiverId String
  status     InviteStatus @default(PENDING)
  group      Group        @relation(fields: [groupId], references: [id], onDelete: Cascade)
  sender     User         @relation("Sender", fields: [senderId], references: [id], onDelete: Cascade)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}
